/******************* Transform ***********************/

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}


/******************* Transition ***********************/

@mixin transition($what: all, $time: 0.2s, $show: ease-in-out) {
    -moz-transition: $what $time $show;
    -o-transition: $what $time $show;
    -webkit-transition: $what $time $show;
    transition: $what $time $show;
}


/******************* Box Shadow ***********************/

@mixin box-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $spread: 0px, $color: $default) {
    box-shadow: $x-axis $y-axis $blur $spread $color;
    -moz-box-shadow: $x-axis $y-axis $blur $spread $color;
    -o-box-shadow: $x-axis $y-axis $blur $spread $color;
    -webkit-box-shadow: $x-axis $y-axis $blur $spread $color;
}


/******************* Text Shadow ***********************/

@mixin text-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $color: $default) {
    text-shadow: $x-axis $y-axis $blur $color;
    -moz-text-shadow: $x-axis $y-axis $blur $color;
    -o-text-shadow: $x-axis $y-axis $blur $color;
    -webkit-text-shadow: $x-axis $y-axis $blur $color;
}


/******************* Border Radius ***********************/

@mixin border-radius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -o-border-radius: $radius;
}


/******************* Opacity ***********************/

@mixin Opacity($value) {
    $IEValue: $value*100;
    opacity: $value;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
    filter: alpha(opacity=$IEValue);
}

/******************* Flexbox display ***********************/

@function getJustify($arg){
    $justify: (
    'sa':space-around,
    'sb':space-between,
    'se':space-evenly,
    'c':center,
    'fs':flex-start,
    'fe':flex-end
    );

    @each $key,$value in $justify{
        @if($key == $arg){
            @return $value;
        }
    }
}

//Get the value for align-items
@function checkAlign($arg){
    $align: (
    'b':baseline,
    's':stretch,
    'c':center,
    'fs':flex-start,
    'fe':flex-end
    );

    @each $key,$value in $align{
        @if($key == $arg){
            @return $value;
        }
    }
}

//Display flex
@mixin inlineflexbox() {
    display: -webkit-inline-box !important;
    display: -moz-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: -webkit-inline-flex !important;
    display: inline-flex !important;
    @content;
}

//Display flex
@mixin flexbox() {
    display: -webkit-box !important;
    display: -moz-box !important;
    display: -ms-flexbox !important;
    display: -webkit-flex !important;
    display: flex !important;
    @content;
}

/******************* KeyFrames ***********************/

@mixin keyframe ($animation_name) {
    @-webkit-keyframes #{$animation_name} {
        @content;
    }
    @-moz-keyframes #{$animation_name} {
        @content;
    }
    @-o-keyframes #{$animation_name} {
        @content;
    }
    @keyframes #{$animation_name} {
        @content;
    }
}


/******************* Animation ***********************/


/*
    Example usage: 
    @include animation(rotate, 5s, 10s, linear, infinite)
 */

@mixin animation ($animation, $delay, $duration, $function, $count) {
    -webkit-animation-name: $animation;
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-timing-function: $function;
    -webkit-animation-iteration-count: $count;
    -moz-animation-name: $animation;
    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-timing-function: $function;
    -moz-animation-iteration-count: $count;
    -o-animation-name: $animation;
    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-timing-function: $function;
    -o-animation-iteration-count: $count;
    animation-name: $animation;
    animation-delay: $delay;
    animation-duration: $duration;
    animation-timing-function: $function;
    animation-iteration-count: $count;
}

/******************* Fixe Line ***********************/

@mixin line-clamp($numLines : 1, $lineHeight: 1.412) {
    overflow: hidden;
    text-overflow: -o-ellipsis-lastline;
    text-overflow: ellipsis;
    display: block;
    display: -webkit-box;
    -webkit-line-clamp: $numLines;
    -webkit-box-orient: vertical;
    max-height: $numLines * $lineHeight + unquote('em');
}

/******************* Gradient ***********************/
@mixin gradient($start-color, $end-color, $orientation) {
    background: $start-color;
    @if $orientation == 'vertical' {
      background: -webkit-linear-gradient(top, $start-color, $end-color);
      background: linear-gradient(to bottom, $start-color, $end-color);
    } @else if $orientation == 'horizontal' {
      background: -webkit-linear-gradient(left, $start-color, $end-color);
      background: linear-gradient(to right, $start-color, $end-color);
    } @else {
      background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
      background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}